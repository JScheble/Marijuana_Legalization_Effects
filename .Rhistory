)
#Mark the Treated States in the dataset
full_df <- full_df %>%
mutate(
Treated = if_else(State %in% c("Colorado", "Washington", "Oregon"), 1, 0)
)
#Section off the Treated States
treated_states <- c("Colorado", "Washington", "Oregon")
#Create a dataset of years before Legalization for testing
pretrend_df <- full_df %>%
filter(Year >= 2005 & Year < 2014) %>%
mutate(Group = if_else(State %in% treated_states, "Treated", "Control")) %>%
group_by(Year, Group) %>%
summarize(Avg_Use = mean(`12+`, na.rm = TRUE), .groups = "drop")
ggplot(usage_df, aes(x = Year, y = `12+`, color = State)) +
geom_line(size = 1.2) +
labs(
title = "Marijuana Use (Past Year) Over Time by State",
subtitle = "Age 12+ Population, 2002–2023",
x = "Year",
y = "Marijuana Use Rate (12+)",
color = "State"
) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
theme_minimal(base_size = 14)
ggplot(pretrend_df, aes(x = Year, y = Avg_Use, color = Group)) +
geom_line(size = 1.4) +
geom_point(size = 2) +
labs(
title = "Pre-Legalization Trends in Past Year Marijuana \nUse (Ages 12+)",
subtitle = "Treated and Control States Followed Similar Trajectories Before Legalization.",
x = "Year",
y = "% of Population",
color = "Group"
) +
scale_color_manual(values = c("Treated" = "#E63946", "Control" = "#1D3557")) +
theme_minimal(base_size = 14) +
theme(
legend.position = "top",
plot.title = element_text(size = 18, face = "bold"),
plot.subtitle = element_text(size = 13)
)
#Model for testing 12+ with our control and factor variables
model_adult_controls <- lm(
`12+` ~ Treated:Post + Median_Income + Poverty_Rate +
factor(State) + factor(Year),
data = full_df
)
results <- tidy(model_adult_controls)
treated_post <- tidy(model_adult_controls) %>%
filter(term == "Treated:Post")
estimate <- round(treated_post$estimate * 100, 2)
se       <- round(treated_post$std.error * 100, 2)
pval     <- signif(treated_post$p.value, 3)
cat(glue("Legalization is associated with a {estimate}% point increase in \npast-year marijuana use among individuals aged 12 and older \n(SE = {se}, p = {pval})."))
legal_years <- data.frame(
State = c("Colorado", "Washington", "Oregon"),
Legal_Year = c(2014, 2014, 2015),
y_position = c(0.31, 0.275, 0.295)
)
plot_df <- full_df %>%
filter(State %in% legal_years$State, Year >= 2012) %>%
left_join(legal_years, by = "State")
plot_df$predicted_with_controls <- predict(model_adult_controls, newdata = plot_df)
# Create the plot
ggplot(plot_df, aes(x = Year)) +
geom_line(aes(y = `12+`, color = "Actual", linetype = "Actual"), size = 1.3) +
geom_line(aes(y = predicted_with_controls, color = "Predicted", linetype = "Predicted"), size = 1.3) +
geom_text(
data = legal_years,
aes(x = Legal_Year, y = 0.37, label = "Legalization Year"),
angle = 90, vjust = -0.5, hjust = 1.2, size = 3.5, color = "gray30", inherit.aes = FALSE
) + coord_cartesian(ylim = c(0.15, 0.34)) +
geom_vline(
aes(xintercept = Legal_Year),
linetype = "dashed",       # or "solid" if you prefer
color = "black",           # stronger contrast
size = 1.1                 # increase line thickness (default is 0.5)
) +
facet_wrap(~ State, ncol = 1) +
scale_x_continuous(breaks = seq(min(plot_df$Year), max(plot_df$Year), by = 1))+
scale_color_manual(
name = "Line Type",
values = c("Actual" = "#E63946", "Predicted" = "#1D3557")
) +
scale_linetype_manual(
name = "Line Type",
values = c("Actual" = "solid", "Predicted" = "dashed")
) +
labs(
title = "Effect of Legalization on Past Year Marijuana Use (Ages 12+)",
subtitle = "Solid Line = Actual Use | Dashed Line = Predicted Use Under No Legalization.",
x = "Year",
y = "Percent of Population Ages 12+"
) +
theme_minimal(base_size = 14) +
theme(
legend.position = "top",
strip.text = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 18, face = "bold"),
plot.subtitle = element_text(size = 12)
)
#Used Generative Ai for help modeling graph
legal_years <- data.frame(
State = c("Colorado", "Washington", "Oregon"),
Legal_Year = c(2014, 2014, 2015)
)
teen_plot_df <- full_df %>%
filter(State %in% legal_years$State, Year >= 2010)
ggplot(teen_plot_df, aes(x = Year, y = `12-17`)) +
geom_line(color = "#E63946", size = 1.3) +
geom_vline(data = legal_years, aes(xintercept = Legal_Year),
linetype = "dashed", color = "black", size = 1.1) +
facet_wrap(~ State, ncol = 1, scales = "free_y") +
scale_x_continuous(breaks = seq(min(teen_plot_df$Year), max(teen_plot_df$Year), by = 1))+
labs(
title = "Teen Marijuana Use in Legalized States \n(Ages 12–17)",
subtitle = "Observable Negative Relationship Between Teen Usage and Time. \nDashed Line = Legalization Year.",
x = "Year",
y = "Use Rate (12–17)"
) +
theme_minimal(base_size = 14) +
theme(
strip.text = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 18, face = "bold")
)
#Used Generative Ai for help modeling graph
#Results from running Regression on just the teen data,
model_teen <- lm(`12-17` ~ Treated:Post + factor(State) + factor(Year), data = full_df)
model_teen_tibble <- tidy(model_teen) %>% filter(term == "Treated:Post")
#model_teen_tibble
X <- model.matrix(
`12+` ~ (Treated + Post + Poverty_Rate + Median_Income + factor(State) + factor(Year))^2,
data = full_df
)[, -1]  # Remove intercept
y <- full_df$`12+`
set.seed(123)
n <- nrow(X)
eval_idx <- sample(1:n, size = 0.10 * n)
X_eval <- X[eval_idx, ]
y_eval <- y[eval_idx]
X_main <- X[-eval_idx, ]
y_main <- y[-eval_idx]
# Index for train/test split
train_indices <- sample(1:nrow(X_main), size = 0.9 * nrow(X_main))
X_train <- X_main[train_indices, ]
X_test  <- X_main[-train_indices, ]
y_train <- y_main[train_indices]
y_test  <- y_main[-train_indices]
# Fit LASSO (alpha = 1)
lasso_model <- cv.glmnet(
X_train, y_train,
alpha = 1,               # LASSO
nfolds = 10,             # 10-fold CV
standardize = TRUE
)
# Extract lambda values and RMSEs
lambda_vals <- lasso_model$lambda
cv_means <- sqrt(lasso_model$cvm)     # test RMSE
cv_stds  <- sqrt(lasso_model$cvm + lasso_model$cvsd)  # upper bound
train_preds_all <- predict(lasso_model, newx = X_train, s = lambda_vals)
train_rmse_all <- apply(train_preds_all, 2, function(pred) sqrt(mean((y_train - pred)^2)))
# Plot RMSEs vs log(lambda)
df_plot <- data.frame(
log_lambda = log(lambda_vals),
Train_RMSE = train_rmse_all,
Test_RMSE = cv_means
)
ggplot(df_plot, aes(x = log_lambda)) +
geom_line(aes(y = Train_RMSE, color = "Train RMSE")) +
geom_line(aes(y = Test_RMSE, color = "Test RMSE")) +
geom_vline(xintercept = log(lasso_model$lambda.min), linetype = "dashed", color = "darkgreen") +
scale_color_manual(values = c("Train RMSE" = "blue", "Test RMSE" = "red")) +
labs(title = "Train vs Test RMSE over Lambda (LASSO)",
x = "log(Lambda)",
y = "RMSE",
color = "RMSE Type") +
theme_minimal()
#Used Generative Ai for plotting help
# Predict
train_preds <- predict(lasso_model, s = "lambda.min", newx = X_train)
test_preds  <- predict(lasso_model, s = "lambda.min", newx = X_test)
# RMSE function
rmse <- function(actual, predicted) {
sqrt(mean((actual - predicted)^2))
}
# Results
train_rmse <- rmse(y_train, train_preds)
test_rmse  <- rmse(y_test,  test_preds)
cat(glue::glue("Train RMSE: {round(train_rmse, 4)}\nTest RMSE: {round(test_rmse, 4)}"))
set.seed(123)
n <- nrow(X)
eval_idx <- sample(1:n, size = 0.10 * n)
X_eval <- X[eval_idx, ]
y_eval <- y[eval_idx]
X_main <- X[-eval_idx, ]
y_main <- y[-eval_idx]
# (After fitting lasso_model on X_train from X_main)
eval_preds <- predict(lasso_model, newx = X_eval, s = "lambda.min")
eval_rmse <- rmse(y_eval, eval_preds)
cat(glue("Evaluation RMSE: {round(eval_rmse, 4)}"))
df2 <- usage_df %>%
mutate(Group = ifelse(State %in% c("Colorado","Oregon","Washington"),
"Legalized States (Treated)", "Non-legalized States (Control)"))
df2$State <- factor(df2$State,
levels = c( "Oregon", "Washington", "Colorado",
"Georgia", "North Carolina", "Texas" ))
min_year <- min(df2$Year); max_year <- max(df2$Year)
lab_pos <- tibble::tribble(
~label,                    ~x,    ~y,
"Legalized States (Treated)",     2003.9,  0.17,
"Non-legalized States (Control)", 2017,  0.10
)
legal_years <- data.frame(
State = c("Colorado", "Washington", "Oregon"),
Legal_Year = c(2011.8, 2012, 2014),
y_position = c(0.31, 0.275, 0.295)
)
ggplot(df2, aes(x = Year, y = `12+`, color = State)) +
geom_line(size = 1.2) +
geom_text(data = lab_pos, aes(x = x, y = y, label = label),
inherit.aes = FALSE, size = 3.8, fontface = "bold", hjust = 0) +
geom_vline(data = legal_years,
aes(xintercept = Legal_Year, color = State),
linetype = "dashed", size = 1, show.legend = FALSE) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
coord_cartesian(clip = "off") +
labs(
title = "Marijuana Use (Past Year) Over Time by State",
subtitle = "Age 12+ Population, 2002–2023. Dashed Lines = Legalization Year",
x = "Year",
y = "Marijuana Use Rate (12+)",
color = "State"
) +
theme_minimal(base_size = 14) +
theme(
legend.position = "right",
plot.margin = margin(5.5, 40, 5.5, 5.5, "pt")
)
knitr::opts_chunk$set(
echo = params$show_code,
warning = FALSE,
message = FALSE
)
library(ggplot2)
library(dplyr)
library(readr)
library(tidyverse)
library(sandwich)
library(lmtest)
library(readxl)
library(broom)
library(glue)
library(glmnet)
library(palmerpenguins)
#Load Main Usage Dataset
usage_df <- read_excel("StateMarijuanaData.xlsx")
#Clean the Year Pair variable to just one year.
usage_df <- usage_df %>%
mutate(Year = as.numeric(sub("-.*", "", year_pair)))
#Load in datasets
Poverty_df <- read_xlsx("Poverty Rates.xlsx")
State_Pop <- read_xlsx("State_Populations.xlsx")
Median_Income <- read_xlsx("MedianIncome.xlsx")
#Rename Variable in Usage Dataset
usage_df <- usage_df %>%
rename(State = geography)
#Join the Datasets
full_df <- usage_df %>%
left_join(Poverty_df, by = c("State", "Year"))
full_df <- full_df %>%
left_join(State_Pop, by = c("State", "Year"))
full_df <- full_df %>%
left_join(Median_Income, by = c("State", "Year"))
write_csv(full_df, "C:/Users/13124/Downloads/merged_marijuana_data.csv")
#Create binary Post Variable, set to 1 = Post Legalization
full_df <- full_df %>%
mutate(
Post = case_when(
(State == "Colorado" & Year >= 2014) |
(State == "Washington" & Year >= 2014) |
(State == "Oregon" & Year >= 2015) ~ 1,
TRUE ~ 0
)
)
#Mark the Treated States in the dataset
full_df <- full_df %>%
mutate(
Treated = if_else(State %in% c("Colorado", "Washington", "Oregon"), 1, 0)
)
#Section off the Treated States
treated_states <- c("Colorado", "Washington", "Oregon")
#Create a dataset of years before Legalization for testing
pretrend_df <- full_df %>%
filter(Year >= 2005 & Year < 2014) %>%
mutate(Group = if_else(State %in% treated_states, "Treated", "Control")) %>%
group_by(Year, Group) %>%
summarize(Avg_Use = mean(`12+`, na.rm = TRUE), .groups = "drop")
df2 <- usage_df %>%
mutate(Group = ifelse(State %in% c("Colorado","Oregon","Washington"),
"Legalized States (Treated)", "Non-legalized States (Control)"))
df2$State <- factor(df2$State,
levels = c( "Oregon", "Washington", "Colorado",
"Georgia", "North Carolina", "Texas" ))
min_year <- min(df2$Year); max_year <- max(df2$Year)
lab_pos <- tibble::tribble(
~label,                    ~x,    ~y,
"Legalized States (Treated)",     2003.9,  0.17,
"Non-legalized States (Control)", 2017,  0.10
)
legal_years <- data.frame(
State = c("Colorado", "Washington", "Oregon"),
Legal_Year = c(2011.8, 2012, 2014),
y_position = c(0.31, 0.275, 0.295)
)
ggplot(df2, aes(x = Year, y = `12+`, color = State)) +
geom_line(size = 1.2) +
geom_text(data = lab_pos, aes(x = x, y = y, label = label),
inherit.aes = FALSE, size = 3.8, fontface = "bold", hjust = 0) +
geom_vline(data = legal_years,
aes(xintercept = Legal_Year, color = State),
linetype = "dashed", size = 1, show.legend = FALSE) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
coord_cartesian(clip = "off") +
labs(
title = "Marijuana Use (Past Year) Over Time by State",
subtitle = "Age 12+ Population, 2002–2023. Dashed Lines = Legalization Year",
x = "Year",
y = "Marijuana Use Rate (12+)",
color = "State"
) +
theme_minimal(base_size = 14) +
theme(
legend.position = "right",
plot.margin = margin(5.5, 40, 5.5, 5.5, "pt")
)
ggplot(pretrend_df, aes(x = Year, y = Avg_Use, color = Group)) +
geom_line(size = 1.4) +
geom_point(size = 2) +
labs(
title = "Pre-Legalization Trends in Past Year Marijuana \nUse (Ages 12+)",
subtitle = "Treated and Control States Followed Similar Trajectories Before Legalization.",
x = "Year",
y = "% of Population",
color = "Group"
) +
scale_color_manual(values = c("Treated" = "#E63946", "Control" = "#1D3557")) +
theme_minimal(base_size = 14) +
theme(
legend.position = "top",
plot.title = element_text(size = 18, face = "bold"),
plot.subtitle = element_text(size = 13)
)
#Model for testing 12+ with our control and factor variables
model_adult_controls <- lm(
`12+` ~ Treated:Post + Median_Income + Poverty_Rate +
factor(State) + factor(Year),
data = full_df
)
results <- tidy(model_adult_controls)
treated_post <- tidy(model_adult_controls) %>%
filter(term == "Treated:Post")
estimate <- round(treated_post$estimate * 100, 2)
se       <- round(treated_post$std.error * 100, 2)
pval     <- signif(treated_post$p.value, 3)
cat(glue("Legalization is associated with a {estimate}% point increase in \npast-year marijuana use among individuals aged 12 and older \n(SE = {se}, p = {pval})."))
legal_years <- data.frame(
State = c("Colorado", "Washington", "Oregon"),
Legal_Year = c(2014, 2014, 2015),
y_position = c(0.31, 0.275, 0.295)
)
plot_df <- full_df %>%
filter(State %in% legal_years$State, Year >= 2012) %>%
left_join(legal_years, by = "State")
plot_df$predicted_with_controls <- predict(model_adult_controls, newdata = plot_df)
# Create the plot
ggplot(plot_df, aes(x = Year)) +
geom_line(aes(y = `12+`, color = "Actual", linetype = "Actual"), size = 1.3) +
geom_line(aes(y = predicted_with_controls, color = "Predicted", linetype = "Predicted"), size = 1.3) +
geom_text(
data = legal_years,
aes(x = Legal_Year, y = 0.37, label = "Legalization Year"),
angle = 90, vjust = -0.5, hjust = 1.2, size = 3.5, color = "gray30", inherit.aes = FALSE
) + coord_cartesian(ylim = c(0.15, 0.34)) +
geom_vline(
aes(xintercept = Legal_Year),
linetype = "dashed",       # or "solid" if you prefer
color = "black",           # stronger contrast
size = 1.1                 # increase line thickness (default is 0.5)
) +
facet_wrap(~ State, ncol = 1) +
scale_x_continuous(breaks = seq(min(plot_df$Year), max(plot_df$Year), by = 1))+
scale_color_manual(
name = "Line Type",
values = c("Actual" = "#E63946", "Predicted" = "#1D3557")
) +
scale_linetype_manual(
name = "Line Type",
values = c("Actual" = "solid", "Predicted" = "dashed")
) +
labs(
title = "Effect of Legalization on Past Year Marijuana Use (Ages 12+)",
subtitle = "Solid Line = Actual Use | Dashed Line = Predicted Use Under No Legalization.",
x = "Year",
y = "Percent of Population Ages 12+"
) +
theme_minimal(base_size = 14) +
theme(
legend.position = "top",
strip.text = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 18, face = "bold"),
plot.subtitle = element_text(size = 12)
)
#Used Generative Ai for help modeling graph
legal_years <- data.frame(
State = c("Colorado", "Washington", "Oregon"),
Legal_Year = c(2014, 2014, 2015)
)
teen_plot_df <- full_df %>%
filter(State %in% legal_years$State, Year >= 2010)
ggplot(teen_plot_df, aes(x = Year, y = `12-17`)) +
geom_line(color = "#E63946", size = 1.3) +
geom_vline(data = legal_years, aes(xintercept = Legal_Year),
linetype = "dashed", color = "black", size = 1.1) +
facet_wrap(~ State, ncol = 1, scales = "free_y") +
scale_x_continuous(breaks = seq(min(teen_plot_df$Year), max(teen_plot_df$Year), by = 1))+
labs(
title = "Teen Marijuana Use in Legalized States \n(Ages 12–17)",
subtitle = "Observable Negative Relationship Between Teen Usage and Time. \nDashed Line = Legalization Year.",
x = "Year",
y = "Use Rate (12–17)"
) +
theme_minimal(base_size = 14) +
theme(
strip.text = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 18, face = "bold")
)
#Used Generative Ai for help modeling graph
#Results from running Regression on just the teen data,
model_teen <- lm(`12-17` ~ Treated:Post + factor(State) + factor(Year), data = full_df)
model_teen_tibble <- tidy(model_teen) %>% filter(term == "Treated:Post")
#model_teen_tibble
X <- model.matrix(
`12+` ~ (Treated + Post + Poverty_Rate + Median_Income + factor(State) + factor(Year))^2,
data = full_df
)[, -1]  # Remove intercept
y <- full_df$`12+`
set.seed(123)
n <- nrow(X)
eval_idx <- sample(1:n, size = 0.10 * n)
X_eval <- X[eval_idx, ]
y_eval <- y[eval_idx]
X_main <- X[-eval_idx, ]
y_main <- y[-eval_idx]
# Index for train/test split
train_indices <- sample(1:nrow(X_main), size = 0.9 * nrow(X_main))
X_train <- X_main[train_indices, ]
X_test  <- X_main[-train_indices, ]
y_train <- y_main[train_indices]
y_test  <- y_main[-train_indices]
# Fit LASSO (alpha = 1)
lasso_model <- cv.glmnet(
X_train, y_train,
alpha = 1,               # LASSO
nfolds = 10,             # 10-fold CV
standardize = TRUE
)
# Extract lambda values and RMSEs
lambda_vals <- lasso_model$lambda
cv_means <- sqrt(lasso_model$cvm)     # test RMSE
cv_stds  <- sqrt(lasso_model$cvm + lasso_model$cvsd)  # upper bound
train_preds_all <- predict(lasso_model, newx = X_train, s = lambda_vals)
train_rmse_all <- apply(train_preds_all, 2, function(pred) sqrt(mean((y_train - pred)^2)))
# Plot RMSEs vs log(lambda)
df_plot <- data.frame(
log_lambda = log(lambda_vals),
Train_RMSE = train_rmse_all,
Test_RMSE = cv_means
)
ggplot(df_plot, aes(x = log_lambda)) +
geom_line(aes(y = Train_RMSE, color = "Train RMSE")) +
geom_line(aes(y = Test_RMSE, color = "Test RMSE")) +
geom_vline(xintercept = log(lasso_model$lambda.min), linetype = "dashed", color = "darkgreen") +
scale_color_manual(values = c("Train RMSE" = "blue", "Test RMSE" = "red")) +
labs(title = "Train vs Test RMSE over Lambda (LASSO)",
x = "log(Lambda)",
y = "RMSE",
color = "RMSE Type") +
theme_minimal()
#Used Generative Ai for plotting help
# Predict
train_preds <- predict(lasso_model, s = "lambda.min", newx = X_train)
test_preds  <- predict(lasso_model, s = "lambda.min", newx = X_test)
# RMSE function
rmse <- function(actual, predicted) {
sqrt(mean((actual - predicted)^2))
}
# Results
train_rmse <- rmse(y_train, train_preds)
test_rmse  <- rmse(y_test,  test_preds)
cat(glue::glue("Train RMSE: {round(train_rmse, 4)}\nTest RMSE: {round(test_rmse, 4)}"))
set.seed(123)
n <- nrow(X)
eval_idx <- sample(1:n, size = 0.10 * n)
X_eval <- X[eval_idx, ]
y_eval <- y[eval_idx]
X_main <- X[-eval_idx, ]
y_main <- y[-eval_idx]
# (After fitting lasso_model on X_train from X_main)
eval_preds <- predict(lasso_model, newx = X_eval, s = "lambda.min")
eval_rmse <- rmse(y_eval, eval_preds)
cat(glue("Evaluation RMSE: {round(eval_rmse, 4)}"))
